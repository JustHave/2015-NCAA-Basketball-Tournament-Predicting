{
    "contents" : "rm(list=ls())           # Clear Memory\n# Read Data\ndata.teams <- read.csv(\"original-data/teams.csv\")\ndata.seeds <- read.csv(\"original-data/tourney_seeds.csv\")\ndata.regular <- read.csv(\"original-data/regular_season_detailed_results.csv\")\ndata.tourney <- read.csv(\"original-data/tourney_detailed_results.csv\")\n\nyear <- 2014\ndata.seeds <- data.seeds[data.seeds[,1]==year,]\ndata.regular <- data.regular[data.regular[,1]==year,]\ndata.tourney <- data.tourney[data.tourney[,1]==year,]\nrow.names(data.seeds) <- row.names(data.regular) <- NULL\nrow.names(data.tourney) <- NULL\n\n# -------------------- Compute average team data -------------------- #\n\n# Team ID\nid.team <- data.teams$team_id\n# The row index of data for win and lose team\nrow.win <- c(4,9:21)\nrow.lose <- c(6,22:34)\n\n# Rename rows of the data\nname.data <- names(data.regular)[row.win]\nname.data <- sapply(name.data, function(varname) {\n  return(paste(\"ave\",substring(varname, 2),sep=\".\"))\n})\nname.data <- c(\"team\", name.data, \"num.win\", \"num.lose\")\nnames(name.data) <- NULL\n\n# Initialize the team average data frame\ndata.average <- matrix(NA, length(id.team), length(name.data))\ndata.average <- as.data.frame(data.average)\nnames(data.average) <- name.data\n\nfor(i in id.team) {\n  # Subset data when i is the winning team\n  col.team <- which(data.regular[,3]==i)\n  data.temp.w <- as.matrix(data.regular[col.team,row.win])\n  # Subset data when i is the losing team\n  col.team <- which(data.regular[,5]==i)\n  data.temp.l <- as.matrix(data.regular[col.team,row.win])\n  # In case that R may match names\n  names(data.temp.w) <- names(data.temp.l) <- NULL\n  # Bind and get the average\n  data.temp <- rbind(data.temp.w, data.temp.l)\n  data.temp <- colMeans(data.temp)\n  \n  # Find row index\n  col.team <- which(data.teams$team_id==i)\n  # Plug in the data we got\n  data.average[col.team, 1] <- i\n  data.average[col.team, 2:15] <- data.temp\n  data.average[col.team, 16] <- nrow(data.temp.w)\n  data.average[col.team, 17] <- nrow(data.temp.l)\n}\n\n# -------------------- Different the average data -------------------- #\n\nname.data <- name.data[-1]\nname.data <- sapply(name.data, function(varname){\n  return(paste(\"diff\", varname, sep=\".\"))\n})\nname.data <- c(\"team.1\", \"team.2\", \"score.diff\",\"team.1.loc\", \n               \"team.1.seed.rank\", \"team.1.area\", \n               \"team.2.seed.rank\", \"team.2.area\", \n               name.data)\nnames(name.data) <- NULL\n\n# Initialize the arranged data\ndata.diff <- matrix(NA, nrow(data.regular),length(name.data))\ndata.diff <- as.data.frame(data.diff)\nnames(data.diff) <- name.data\n\n# Plug in the first few columns\ndata.diff[,1] <- data.regular[,3]\ndata.diff[,2] <- data.regular[,5]\ndata.diff[,3] <- data.regular[,4] - data.regular[,6]\ndata.diff[,4] <- data.regular[,7]\n\n# Arrange the order of two teams\nfor(i in 1:nrow(data.regular)) {\n  if(data.diff[i,1] > data.diff[i,2]) {\n    # Arrange the order of two teams\n    col.team <- data.diff[i,1]\n    data.diff[i,1] <- data.diff[i,2]\n    data.diff[i,2] <- col.team\n    # Adjust the other parameters\n    data.diff[i,3] <- -data.diff[i,3]\n    if(data.diff[i,4]==\"H\") {data.diff[i,4]=\"A\"}\n    else if(data.diff[i,4]==\"A\") {data.diff[i,4]=\"H\"}\n  }\n}\n\n# Plug in the next few columns\nfor(i in 1:nrow(data.regular)) {\n  # Filling data for team 1\n  t1 <- data.diff[i,1]\n  col.team <- which(data.seeds[,3]==t1)\n  if(length(col.team)!=0) {\n    data.temp <- data.seeds[col.team,2]\n    data.diff[i,5] <- as.numeric(substring(data.temp, 2, 3))\n    data.diff[i,6] <- substring(data.temp, 1, 1)\n  } else {\n    data.diff[i,5] <- 20\n    data.diff[i,6] <- \"not.seed\"\n  }\n  # Filling data for team 2\n  t2 <- data.diff[i,2]\n  col.team <- which(data.seeds[,3]==t2)\n  if(length(col.team)!=0) {\n    data.temp <- data.seeds[col.team,2]\n    data.diff[i,7] <- as.numeric(substring(data.temp, 2, 3))\n    data.diff[i,8] <- substring(data.temp, 1, 1)\n  } else {\n    data.diff[i,7] <- 100\n    data.diff[i,8] <- \"not.seed\"\n  }\n}\n\n# Plug in the differential data\nfor(i in 1:nrow(data.regular)) {\n  t1 <- data.diff[i,1]\n  t2 <- data.diff[i,2]\n  data.temp.w <- which(data.average[,1]==t1)\n  data.temp.l <- which(data.average[,1]==t2)\n  data.temp <- data.average[data.temp.w,-1] - data.average[data.temp.l,-1]\n  data.diff[i,9:24] <- data.temp\n}\n\ndput(data.average, file = \"arranged-data/data-average-2014.R\")\ndput(data.diff, file = \"arranged-data/data-diff-2014.R\")\n\n# -------------------- Arrange the tourneyment data -------------------- #\n\n# Initialize the arranged data\ndata.diff <- matrix(NA, nrow(data.tourney),length(name.data))\ndata.diff <- as.data.frame(data.diff)\nnames(data.diff) <- name.data\n\n# Plug in the first few columns\ndata.diff[,1] <- data.tourney[,3]\ndata.diff[,2] <- data.tourney[,5]\ndata.diff[,3] <- data.tourney[,4] - data.tourney[,6]\ndata.diff[,4] <- data.tourney[,7]\n\n# Arrange the order of two teams\nfor(i in 1:nrow(data.tourney)) {\n  if(data.diff[i,1] > data.diff[i,2]) {\n    # Arrange the order of two teams\n    col.team <- data.diff[i,1]\n    data.diff[i,1] <- data.diff[i,2]\n    data.diff[i,2] <- col.team\n    # Adjust the other parameters\n    data.diff[i,3] <- -data.diff[i,3]\n    if(data.diff[i,4]==\"H\") {data.diff[i,4]=\"A\"}\n    else if(data.diff[i,4]==\"A\") {data.diff[i,4]=\"H\"}\n  }\n}\n\n# Plug in the next few columns\nfor(i in 1:nrow(data.tourney)) {\n  # Filling data for team 1\n  t1 <- data.diff[i,1]\n  col.team <- which(data.seeds[,3]==t1)\n  if(length(col.team)!=0) {\n    data.temp <- data.seeds[col.team,2]\n    data.diff[i,5] <- as.numeric(substring(data.temp, 2, 3))\n    data.diff[i,6] <- substring(data.temp, 1, 1)\n  } else {\n    data.diff[i,5] <- 20\n    data.diff[i,6] <- \"not.seed\"\n  }\n  # Filling data for team 2\n  t2 <- data.diff[i,2]\n  col.team <- which(data.seeds[,3]==t2)\n  if(length(col.team)!=0) {\n    data.temp <- data.seeds[col.team,2]\n    data.diff[i,7] <- as.numeric(substring(data.temp, 2, 3))\n    data.diff[i,8] <- substring(data.temp, 1, 1)\n  } else {\n    data.diff[i,7] <- 100\n    data.diff[i,8] <- \"not.seed\"\n  }\n}\n\n# Plug in the differential data\nfor(i in 1:nrow(data.tourney)) {\n  t1 <- data.diff[i,1]\n  t2 <- data.diff[i,2]\n  data.temp.w <- which(data.average[,1]==t1)\n  data.temp.l <- which(data.average[,1]==t2)\n  data.temp <- data.average[data.temp.w,-1] - data.average[data.temp.l,-1]\n  data.diff[i,9:24] <- data.temp\n}\n\ndput(data.diff, file = \"arranged-data/data-tourney-diff-2014.R\")\n\n\n\n\n\n\n\n\n\n",
    "created" : 1428533117883.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3783189305",
    "id" : "BA8AF001",
    "lastKnownWriteTime" : 1428533062,
    "path" : "D:/Github/2015-NCAA-Basketball-Tournament-Predicting/1-read-arrange-data-1.R",
    "project_path" : "1-read-arrange-data-1.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}