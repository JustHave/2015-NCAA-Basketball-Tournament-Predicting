{
    "contents" : "# Clearing memory and reading data\nrm(list=ls())\ndata.regular <- rbind(\n  read.csv(\"original-data/regular_season_detailed_results_2015.csv\"), \n  read.csv(\"original-data/regular_season_detailed_results.csv\"))\ndata.regular <- data.regular[data.regular$wloc!=\"N\",]\ndata.team <- read.csv(\"original-data/teams.csv\")\ndata.team <- data.team$team_id\ndata.year <- sort(unique(data.regular$season), decreasing=T)\n\n# Initializing paired data\ndata.pair <- matrix(NA, nrow(data.regular), ncol(data.regular))\ndata.pair <- as.data.frame(data.pair)\nnames(data.pair) <- names(data.regular)\ndata.pair$wloc <- data.regular$wloc\n\n# Row index\nk <- 0\n# Start iteration\nfor(y in data.year) {\n  data.temp <- data.regular[data.regular$season==y,]\n  for(i in 1:(length(data.team)-1)) {\n    for(j in i:length(data.team)) {\n      t1 <- data.team[i]\n      t2 <- data.team[j]\n      index.row <- c(intersect(which(data.temp$wteam==t1), \n                               which(data.temp$lteam==t2)), \n                     intersect(which(data.temp$lteam==t1), \n                               which(data.temp$wteam==t2)))\n      if(length(index.row)==2) {\n        data.pair[0:(length(index.row)-1)+k+1,] <- data.temp[index.row,]\n        k <- k + length(index.row)\n      }\n    }\n  }\n  print(y)\n}\n# Cleaning and storing data\ndata.pair <- data.pair[complete.cases(data.pair),]\nwrite.csv(data.pair, file = \"arranged-data/data-pair.csv\")\ndata.pair <- read.csv(\"arranged-data/data-pair.csv\")\ndata.pair <- data.pair[,-1]\n\n# Initializing paired data\ndata.diff <- matrix(NA, nrow(data.pair), 4)\ndata.diff <- as.data.frame(data.diff)\nnames(data.diff) <- c(\"season\", \"team.home\", \"team.alien\", \"diff.score\")\n\n# Compute different in score\nfor(i in 1:nrow(data.pair)) {\n  data.diff[i,1] <- data.pair[i,1]\n  if(data.pair[i,7]==\"H\") {\n    data.diff[i,2] <- data.pair[i,3]\n    data.diff[i,3] <- data.pair[i,5]\n    data.diff[i,4] <- data.pair[i,4] - data.pair[i,6]\n  } else {\n    data.diff[i,2] <- data.pair[i,5]\n    data.diff[i,3] <- data.pair[i,3]\n    data.diff[i,4] <- data.pair[i,6] - data.pair[i,4]\n  }\n}\n# Storing data\nwrite.csv(data.diff, file = \"arranged-data/data-diff.csv\")\nrm(list=ls())\ndata.diff <- read.csv(\"arranged-data/data-diff.csv\")\ndata.diff <- data.diff[,-1]\n\nhist(data.diff[,4], nclass=20)\nsummary(data.diff[,4])\n\n# Initializing score data\ndiff.score <- max(data.diff[,4]):min(data.diff[,4])\ndata.score <- matrix(NA, length(diff.score), 3)\ndata.score <- as.data.frame(data.score)\ndata.score[,1] <- diff.score\nnames(data.score) <- c(\"diff.score\", \"num.win\", \"num.played\")\n\nfor(s in 1:nrow(data.score)) {\n  index.row <- which(data.diff[,4]==data.score[s,1])\n  data.score[s,3] <- length(index.row)\n  num.wined <- 0\n  if(length(index.row)!=0) {for(i in index.row) {\n    if(i%%2==0) {\n      if(data.diff[i-1,4]<0) num.wined <- num.wined+1\n    } else {\n      if(data.diff[i+1,4]<0) num.wined <- num.wined+1\n    }\n  }}\n  data.score[s,2] <- num.wined\n}\n\np <- data.score[,2] / data.score[,3]\nplot(data.score[,1],p)\n\nwrite.csv(data.score, file = \"arranged-data/data-score.csv\")\n\n\n# Initializing wining data\ndata.win <- matrix(NA, nrow(data.diff), 2)\ndata.win <- as.data.frame(data.win)\nnames(data.win) <- c(\"result.alien\", \"diff.score.at.home\")\n\nfor(i in 1:nrow(data.diff)) {\n  data.win[i,2] <- data.diff[i,4]\n  if(i%%2==0) {\n    if(data.diff[i-1,4]<0) data.win[i,1] <- 1\n    else data.win[i,1] <- 0\n  } else {\n    if(data.diff[i+1,4]<0) data.win[i,1] <- 1\n    else data.win[i,1] <- 0\n  }\n}\nwrite.csv(data.win, file = \"arranged-data/data-result.csv\")\n\ndata.win[,2] <- data.matrix(data.win[,2])\n\nmodel.log <- glm(result.alien~., data.win, family=\"binomial\")\npred <- sapply(predict(model.log,type=\"response\"), function(y) {\n  if(y>0.5) return(1)\n  else return(0)\n})\nsum(pred == data.win[,1]) / length(pred)\ntab <- table(pred=pred, true=data.win[,1])\n",
    "created" : 1428707182501.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3219073062",
    "id" : "A0BA9DF1",
    "lastKnownWriteTime" : 1428713190,
    "path" : "D:/Github/2015-NCAA-Basketball-Tournament-Predicting/2-read-arrange-data.R",
    "project_path" : "2-read-arrange-data.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}