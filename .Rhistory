return(F)
}
})
logic.lose$lteam <- F
# -------------------- 2 -------------------- #
TEAM <- teams$team_id
YEAR <- sort(unique(tDetail$season), decreasing=T)
NAME <- sapply(names(tDetail)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
YEAR <- sapply(YEAR, function(y) {
return(rep(y, length(NAME)))
})
YEAR <- as.vector(YEAR)
NAME <- interaction(NAME,YEAR)
aveData <- matrix(0, nrow(teams), length(NAME))
aveData <- as.data.frame(aveData)
rownames(aveData) <- TEAM
colnames(aveData) <- NAME
TEAM <- teams$team_id
YEAR <- sort(unique(tDetail$season), decreasing=T)
NAME <- sapply(names(tDetail)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
rm(list=ls())
seasons <- read.csv("seasons.csv")
teams <- read.csv("teams.csv")
tCompact <- read.csv("tourney_compact_results.csv")
tDetail <- read.csv("tourney_detailed_results.csv")
tSeed <- read.csv("tourney_seeds.csv")
tSlot <- read.csv("tourney_slots.csv")
regCompact <- read.csv("regular_season_compact_results.csv")
regResult <- read.csv("regular_season_detailed_results.csv")
# -------------------- 1 -------------------- #
logic.win <- sapply(names(tDetail),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win
logic.win[3] <- F
logic.win[7] <- F
logic.win
rm(list=ls())
seasons <- read.csv("seasons.csv")
teams <- read.csv("teams.csv")
tCompact <- read.csv("tourney_compact_results.csv")
tDetail <- read.csv("tourney_detailed_results.csv")
tSeed <- read.csv("tourney_seeds.csv")
tSlot <- read.csv("tourney_slots.csv")
regCompact <- read.csv("regular_season_compact_results.csv")
regResult <- read.csv("regular_season_detailed_results.csv")
# -------------------- 1 -------------------- #
logic.win <- sapply(names(tDetail),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win[3] <- F
logic.win[7] <- F
logic.lose <- sapply(names(tDetail),function(varname){
if(substring(varname, 1, 1) == "l"){
return(T)
} else {
return(F)
}
})
logic.lose[3] <- F
TEAM <- teams$team_id
YEAR <- sort(unique(tDetail$season), decreasing=T)
NAME <- sapply(names(tDetail)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
YEAR <- sapply(YEAR, function(y) {
return(rep(y, length(NAME)))
})
YEAR <- as.vector(YEAR)
NAME <- interaction(NAME,YEAR)
aveData <- matrix(0, nrow(teams), length(NAME))
aveData <- as.data.frame(aveData)
rownames(aveData) <- TEAM
colnames(aveData) <- NAME
TEAM <- teams$team_id
YEAR <- sort(unique(tDetail$season), decreasing=T)
NAME <- sapply(names(tDetail)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
View(aveData)
for(y in YEAR) {
for(t in TEAM) {
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- (which(YEAR == y) - 1) * length(NAME)
n <- which(TEAM == t)
aveData[n, (k*length(NAME)+1):((k+1)*length(NAME))] <- tempData
}
}
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
View(tempData.1)
View(tempData.2)
logic.lose
rm(list=ls())
seasons <- read.csv("seasons.csv")
teams <- read.csv("teams.csv")
tCompact <- read.csv("tourney_compact_results.csv")
tDetail <- read.csv("tourney_detailed_results.csv")
tSeed <- read.csv("tourney_seeds.csv")
tSlot <- read.csv("tourney_slots.csv")
regCompact <- read.csv("regular_season_compact_results.csv")
regResult <- read.csv("regular_season_detailed_results.csv")
# -------------------- 1 -------------------- #
logic.win <- sapply(names(tDetail),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win[3] <- F
logic.win[7] <- F
logic.lose <- sapply(names(tDetail),function(varname){
if(substring(varname, 1, 1) == "l"){
return(T)
} else {
return(F)
}
})
logic.lose[5] <- F
# -------------------- 2 -------------------- #
TEAM <- teams$team_id
YEAR <- sort(unique(tDetail$season), decreasing=T)
NAME <- sapply(names(tDetail)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
YEAR <- sapply(YEAR, function(y) {
return(rep(y, length(NAME)))
})
YEAR <- as.vector(YEAR)
NAME <- interaction(NAME,YEAR)
aveData <- matrix(0, nrow(teams), length(NAME))
aveData <- as.data.frame(aveData)
rownames(aveData) <- TEAM
colnames(aveData) <- NAME
TEAM <- teams$team_id
YEAR <- sort(unique(tDetail$season), decreasing=T)
NAME <- sapply(names(tDetail)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
for(y in YEAR) {
for(t in TEAM) {
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- (which(YEAR == y) - 1) * length(NAME)
n <- which(TEAM == t)
aveData[n, (k*length(NAME)+1):((k+1)*length(NAME))] <- tempData
}
}
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
names(tempData.1)
names(tempData.1) <- NAME
names(tempData.1)
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
names(tempData.1) <- NAME
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
names(tempData.2) <- NAME
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- (which(YEAR == y) - 1) * length(NAME)
n <- which(TEAM == t)
aveData[n, (k*length(NAME)+1):((k+1)*length(NAME))] <- tempData
for(y in YEAR) {
for(t in TEAM) {
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
names(tempData.1) <- NAME
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
names(tempData.2) <- NAME
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- (which(YEAR == y) - 1) * length(NAME)
n <- which(TEAM == t)
aveData[n, (k*length(NAME)+1):((k+1)*length(NAME))] <- tempData
}
}
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
names(tempData.1) <- NAME
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
names(tempData.2) <- NAME
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- (which(YEAR == y) - 1) * length(NAME)
n <- which(TEAM == t)
aveData[n, (k*length(NAME)+1):((k+1)*length(NAME))] <- tempData
(k*length(NAME)+1):((k+1)*length(NAME))
k
k
k <- which(YEAR == y)
n <- which(TEAM == t)
aveData[n, ((k-1)*length(NAME)+1):(K*length(NAME))] <- tempData
aveData[n, ((k-1)*length(NAME)+1):(k*length(NAME))] <- tempData
for(y in YEAR) {
for(t in TEAM) {
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
names(tempData.1) <- NAME
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
names(tempData.2) <- NAME
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- which(YEAR == y)
n <- which(TEAM == t)
aveData[n, ((k-1)*length(NAME)+1):(k*length(NAME))] <- tempData
}
}
View(aveData)
View(regCompact)
View(regResult)
View(regCompact)
View(regResult)
rm(list=ls())
seasons <- read.csv("seasons.csv")
teams <- read.csv("teams.csv")
tCompact <- read.csv("tourney_compact_results.csv")
tDetail <- read.csv("tourney_detailed_results.csv")
tSeed <- read.csv("tourney_seeds.csv")
tSlot <- read.csv("tourney_slots.csv")
regCompact <- read.csv("regular_season_compact_results.csv")
regResult <- read.csv("regular_season_detailed_results.csv")
# -------------------- 1 -------------------- #
logic.win <- sapply(names(regResult),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win[3] <- F
logic.win[7] <- F
logic.lose <- sapply(names(regResult),function(varname){
if(substring(varname, 1, 1) == "l"){
return(T)
} else {
return(F)
}
})
logic.lose[5] <- F
# -------------------- 2 -------------------- #
TEAM <- teams$team_id
YEAR <- sort(unique(regResult$season), decreasing=T)
NAME <- sapply(names(regResult)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
YEAR <- sapply(YEAR, function(y) {
return(rep(y, length(NAME)))
})
YEAR <- as.vector(YEAR)
NAME <- interaction(NAME,YEAR)
aveData <- matrix(0, nrow(teams), length(NAME))
aveData <- as.data.frame(aveData)
rownames(aveData) <- TEAM
colnames(aveData) <- NAME
TEAM <- teams$team_id
YEAR <- sort(unique(regResult$season), decreasing=T)
NAME <- sapply(names(regResult)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
for(y in YEAR) {
for(t in TEAM) {
logic.y <- tDetail$season == y
logic.t <- tDetail$wteam == t
tempData.1 <- tDetail[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
names(tempData.1) <- NAME
logic.t <- tDetail$lteam == t
tempData.2 <- tDetail[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
names(tempData.2) <- NAME
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- which(YEAR == y)
n <- which(TEAM == t)
aveData[n, ((k-1)*length(NAME)+1):(k*length(NAME))] <- tempData
}
}
View(aveData)
rm(list=ls())
seasons <- read.csv("seasons.csv")
teams <- read.csv("teams.csv")
tCompact <- read.csv("tourney_compact_results.csv")
tDetail <- read.csv("tourney_detailed_results.csv")
tSeed <- read.csv("tourney_seeds.csv")
tSlot <- read.csv("tourney_slots.csv")
regCompact <- read.csv("regular_season_compact_results.csv")
regResult <- read.csv("regular_season_detailed_results.csv")
# -------------------- 1 -------------------- #
logic.win <- sapply(names(regResult),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win[3] <- F
logic.win[7] <- F
logic.lose <- sapply(names(regResult),function(varname){
if(substring(varname, 1, 1) == "l"){
return(T)
} else {
return(F)
}
})
logic.lose[5] <- F
# -------------------- 2 -------------------- #
TEAM <- teams$team_id
YEAR <- sort(unique(regResult$season), decreasing=T)
NAME <- sapply(names(regResult)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
YEAR <- sapply(YEAR, function(y) {
return(rep(y, length(NAME)))
})
YEAR <- as.vector(YEAR)
NAME <- interaction(NAME,YEAR)
aveData <- matrix(0, nrow(teams), length(NAME))
aveData <- as.data.frame(aveData)
rownames(aveData) <- TEAM
colnames(aveData) <- NAME
TEAM <- teams$team_id
YEAR <- sort(unique(regResult$season), decreasing=T)
NAME <- sapply(names(regResult)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
# -------------------- 3 -------------------- #
for(y in YEAR) {
for(t in TEAM) {
logic.y <- regResult$season == y
logic.t <- regResult$wteam == t
tempData.1 <- regResult[logic.y & logic.t, ]
tempData.1 <- tempData.1[logic.win]
names(tempData.1) <- NAME
logic.t <- regResult$lteam == t
tempData.2 <- regResult[logic.y & logic.t, ]
tempData.2 <- tempData.2[logic.lose]
names(tempData.2) <- NAME
tempData <- rbind(tempData.1, tempData.2)
tempData <- colMeans(tempData)
k <- which(YEAR == y)
n <- which(TEAM == t)
aveData[n, ((k-1)*length(NAME)+1):(k*length(NAME))] <- tempData
}
}
View(aveData)
write.csv(aveData, "teamAverage.csv")
rm(list=ls())
teams <- read.csv("teams.csv")
regResult <- read.csv("regular_season_detailed_results.csv")
# -------------------- 1 -------------------- #
logic.win <- sapply(names(regResult),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win[3] <- F
logic.win[7] <- F
logic.lose <- sapply(names(regResult),function(varname){
if(substring(varname, 1, 1) == "l"){
return(T)
} else {
return(F)
}
})
logic.lose[5] <- F
# -------------------- 2 -------------------- #
TEAM <- teams$team_id
YEAR <- sort(unique(regResult$season), decreasing=T)
NAME <- sapply(names(regResult)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
YEAR <- sapply(YEAR, function(y) {
return(rep(y, length(NAME)))
})
YEAR <- as.vector(YEAR)
NAME <- interaction(NAME,YEAR)
aveData <- matrix(0, nrow(teams), length(NAME))
aveData <- as.data.frame(aveData)
rownames(aveData) <- TEAM
colnames(aveData) <- NAME
TEAM <- teams$team_id
YEAR <- sort(unique(regResult$season), decreasing=T)
NAME <- sapply(names(regResult)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
rm(list=ls())
teams <- read.csv("teams.csv")
teamAverage <- read.csv("team_average.csv")
View(teamAverage)
tCompact <- read.csv("tourney_compact_results.csv")
View(tCompact)
tDetailed <- read.csv("tourney_detailed_results.csv")
View(tDetailed)
rm(list=ls())
teams <- read.csv("teams.csv")
teamAverage <- read.csv("team_average.csv")
tDetailed <- read.csv("tourney_detailed_results.csv")
View(teamAverage)
TEAM <- teams$team_id
YEAR <- sort(unique(tDetailed$season), decreasing=T)
NAME <- sapply(names(regResult)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
NAME <- sapply(names(tDetailed)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
NAME <- sapply(names(tDetailed)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
logic.win <- sapply(names(regResult),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win[3] <- F
logic.win[7] <- F
rm(list=ls())
teams <- read.csv("teams.csv")
teamAverage <- read.csv("team_average.csv")
tDetailed <- read.csv("tourney_detailed_results.csv")
logic.win <- sapply(names(tDetailed),function(varname){
if(substring(varname, 1, 1) == "w"){
return(T)
} else {
return(F)
}
})
logic.win[3] <- F
logic.win[7] <- F
TEAM <- teams$team_id
YEAR <- sort(unique(tDetailed$season), decreasing=T)
NAME <- sapply(names(tDetailed)[logic.win], function(varname) {
return(substring(varname, 2))
})
names(NAME) <- NULL
View(tDetailed)
