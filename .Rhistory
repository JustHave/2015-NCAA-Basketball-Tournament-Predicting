intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)==3) {
k <- k+1
}
}
}
print(y)
}
(k+1):(k+1+length(index.row))
(k+1+length(index.row))
length(index.row)
# Row index
k <- 0
# Start iteration
for(y in data.year) {
data.temp <- data.regular[data.regular$season==y,]
for(i in 1:(length(data.team)-1)) {
for(j in i:length(data.team)) {
t1 <- data.team[i]
t2 <- data.team[j]
index.row <- c(intersect(which(data.temp$wteam==t1),
which(data.temp$lteam==t2)),
intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)>=2) {
data.pair[(k+1):(k+1+length(index.row)),] <- data.team[index.row,]
k <- k + length(index.row)
}
}
}
print(y)
}
0:length(index.row)+k+1
length(index.row)
0:length(index.row)+k
0:(length(index.row)-1)+k+1
index.row
# Row index
k <- 0
# Start iteration
for(y in data.year) {
data.temp <- data.regular[data.regular$season==y,]
for(i in 1:(length(data.team)-1)) {
for(j in i:length(data.team)) {
t1 <- data.team[i]
t2 <- data.team[j]
index.row <- c(intersect(which(data.temp$wteam==t1),
which(data.temp$lteam==t2)),
intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)>=2) {
data.pair[0:(length(index.row)-1)+k+1,] <- data.team[index.row,]
k <- k + length(index.row)
}
}
}
print(y)
}
0:(length(index.row)-1)+k+1
data.pair[0:(length(index.row)-1)+k+1,]
data.temp[index.row,]
# Row index
k <- 0
# Start iteration
for(y in data.year) {
data.temp <- data.regular[data.regular$season==y,]
for(i in 1:(length(data.team)-1)) {
for(j in i:length(data.team)) {
t1 <- data.team[i]
t2 <- data.team[j]
index.row <- c(intersect(which(data.temp$wteam==t1),
which(data.temp$lteam==t2)),
intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)>=2) {
data.pair[0:(length(index.row)-1)+k+1,] <- data.temp[index.row,]
k <- k + length(index.row)
}
}
}
print(y)
}
View(data.pair)
View(data.regular)
# Row index
k <- 0
# Start iteration
for(y in data.year) {
data.temp <- data.regular[data.regular$season==y,]
for(i in 1:(length(data.team)-1)) {
for(j in i:length(data.team)) {
t1 <- data.team[i]
t2 <- data.team[j]
index.row <- c(intersect(which(data.temp$wteam==t1),
which(data.temp$lteam==t2)),
intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)>=3) {
data.pair[0:(length(index.row)-1)+k+1,] <- data.temp[index.row,]
k <- k + length(index.row)
}
}
}
print(y)
}
View(data.pair)
data.pair$wloc
data.pair$wloc <- factor(data.pair$wloc)
# Clearing memory and reading data
rm(list=ls())
data.regular <- rbind(
read.csv("original-data/regular_season_detailed_results_2015.csv"),
read.csv("original-data/regular_season_detailed_results.csv"))
data.regular <- data.regular[data.regular$wloc!="N",]
data.team <- read.csv("original-data/teams.csv")
data.team <- data.team$team_id
data.year <- sort(unique(data.regular$season), decreasing=T)
# Initializing paired data
data.pair <- matrix(NA, nrow(data.regular), ncol(data.regular))
data.pair <- as.data.frame(data.pair)
names(data.pair) <- names(data.regular)
data.pair$wloc <- factor(data.pair$wloc)
# Row index
k <- 0
# Start iteration
for(y in data.year) {
data.temp <- data.regular[data.regular$season==y,]
for(i in 1:(length(data.team)-1)) {
for(j in i:length(data.team)) {
t1 <- data.team[i]
t2 <- data.team[j]
index.row <- c(intersect(which(data.temp$wteam==t1),
which(data.temp$lteam==t2)),
intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)==2) {
data.pair[0:(length(index.row)-1)+k+1,] <- data.temp[index.row,]
k <- k + length(index.row)
}
}
}
print(y)
}
View(data.pair)
# Clearing memory and reading data
rm(list=ls())
data.regular <- rbind(
read.csv("original-data/regular_season_detailed_results_2015.csv"),
read.csv("original-data/regular_season_detailed_results.csv"))
data.regular <- data.regular[data.regular$wloc!="N",]
data.team <- read.csv("original-data/teams.csv")
data.team <- data.team$team_id
data.year <- sort(unique(data.regular$season), decreasing=T)
# Initializing paired data
data.pair <- matrix(NA, nrow(data.regular), ncol(data.regular))
data.pair <- as.data.frame(data.pair)
names(data.pair) <- names(data.regular)
data.pair$wloc <- data.regular$wloc
View(data.pair)
# Row index
k <- 0
# Start iteration
for(y in data.year) {
data.temp <- data.regular[data.regular$season==y,]
for(i in 1:(length(data.team)-1)) {
for(j in i:length(data.team)) {
t1 <- data.team[i]
t2 <- data.team[j]
index.row <- c(intersect(which(data.temp$wteam==t1),
which(data.temp$lteam==t2)),
intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)==2) {
data.pair[0:(length(index.row)-1)+k+1,] <- data.temp[index.row,]
k <- k + length(index.row)
}
}
}
print(y)
}
View(data.pair)
# Clearing memory and reading data
rm(list=ls())
data.regular <- rbind(
read.csv("original-data/regular_season_detailed_results_2015.csv"),
read.csv("original-data/regular_season_detailed_results.csv"))
data.regular <- data.regular[data.regular$wloc!="N",]
data.team <- read.csv("original-data/teams.csv")
data.team <- data.team$team_id
data.year <- sort(unique(data.regular$season), decreasing=T)
# Initializing paired data
data.pair <- matrix(NA, nrow(data.regular), ncol(data.regular))
data.pair <- as.data.frame(data.pair)
names(data.pair) <- names(data.regular)
data.pair$wloc <- data.regular$wloc
# Row index
k <- 0
# Start iteration
for(y in data.year) {
data.temp <- data.regular[data.regular$season==y,]
for(i in 1:(length(data.team)-1)) {
for(j in i:length(data.team)) {
t1 <- data.team[i]
t2 <- data.team[j]
index.row <- c(intersect(which(data.temp$wteam==t1),
which(data.temp$lteam==t2)),
intersect(which(data.temp$lteam==t1),
which(data.temp$wteam==t2)))
if(length(index.row)==2) {
data.pair[0:(length(index.row)-1)+k+1,] <- data.temp[index.row,]
k <- k + length(index.row)
}
}
}
print(y)
}
dput(data.pair, file = "arranged-data/data-pair.R")
View(data.pair)
complete.cases(data.pair)
data.pair <- data.pair[complete.cases(data.pair),]
dput(data.pair, file = "arranged-data/data-pair.R")
nrow(data.pair)
data.pair <- matrix(NA, nrow(data.regular), 4)
data.pair <- as.data.frame(data.pair)
data.pair <- dget("arranged-data/data-pair.R")
write.csv(data.pair, file = "arranged-data/data-pair.csv")
data.pair <- read.csv("arranged-data/data-pair.csv")
View(data.pair)
data.pair <- data.pair[,-1]
View(data.pair)
row.names(data.pair) <- NULL
write.csv(data.pair, file = "arranged-data/data-pair.csv")
data.pair <- read.csv("arranged-data/data-pair.csv")
View(data.pair)
?read.csv
data.pair <- read.csv("arranged-data/data-pair.csv", row.names=F)
data.pair <- read.csv("arranged-data/data-pair.csv", row.names)
data.pair <- read.csv("arranged-data/data-pair.csv", row.names=NULL)
data.pair <- read.csv("arranged-data/data-pair.csv")
data.pair <- data.pair[,-1]
View(data.pair)
data.diff <- matrix(NA, nrow(data.diff), 4)
data.diff <- as.data.frame(data.diff)
data.diff <- matrix(NA, nrow(data.pair), 4)
data.diff <- as.data.frame(data.diff)
names(data.diff) <- c("season", "team.home", "team.alien", "diff.score")
View(data.diff)
View(data.pair)
for(i in 1:nrow(data.pair)) {
data.diff[i,1] <- data.pair[i,1]
if(data.pair[i,7]==H) {
data.diff[i,2] <- data.pair[i,3]
data.diff[i,3] <- data.pair[i,5]
data.diff[i,4] <- data.pair[i,4] - data.pair[i,6]
} else {
data.diff[i,2] <- data.pair[i,5]
data.diff[i,3] <- data.pair[i,3]
data.diff[i,4] <- data.pair[i,6] - data.pair[i,4]
}
}
data.pair[i,7]=="H"
for(i in 1:nrow(data.pair)) {
data.diff[i,1] <- data.pair[i,1]
if(data.pair[i,7]=="H") {
data.diff[i,2] <- data.pair[i,3]
data.diff[i,3] <- data.pair[i,5]
data.diff[i,4] <- data.pair[i,4] - data.pair[i,6]
} else {
data.diff[i,2] <- data.pair[i,5]
data.diff[i,3] <- data.pair[i,3]
data.diff[i,4] <- data.pair[i,6] - data.pair[i,4]
}
}
View(data.diff)
hist()
write.csv(data.diff, file = "arranged-data/data-diff.csv")
hist(data.diff[,4])
source('~/.active-rstudio-document', echo=TRUE)
summary(data.diff[,4])
rm(list=ls())
data.diff <- read.csv("arranged-data/data-diff.csv")
data.diff <- data.diff[,-1]
hist(data.diff[,4])
summary(data.diff[,4])
?hist
hist(data.diff[,4], nclass=20)
hist(data.diff[,4], nclass=30)
hist(data.diff[,4], nclass=30)
hist(data.diff[,4], nclass=40)
hist(data.diff[,4], nclass=20)
hist(data.diff[,4], nclass=15)
hist(data.diff[,4], nclass=20)
min(data.diff[,4]):max(data.diff[,4])
diff.score <- min(data.diff[,4]):max(data.diff[,4])
data.score <- matrix(NA, nrow(data.pair), 3)
data.score <- matrix(NA, length(diff.score), 3)
data.score <- as.data.frame(data.score)
names(data.diff) <- c("season", "team.home", "team.alien", "diff.score")
View(data.score)
names(data.diff) <- c("diff.score", "num.win", "num.played")
View(data.score)
rm(list=ls())
data.diff <- read.csv("arranged-data/data-diff.csv")
data.diff <- data.diff[,-1]
diff.score <- min(data.diff[,4]):max(data.diff[,4])
data.score <- matrix(NA, length(diff.score), 3)
data.score <- as.data.frame(data.score)
names(data.score) <- c("diff.score", "num.win", "num.played")
View(data.score)
data.score[,1] <- diff.score
View(data.diff)
View(data.score)
diff.score <- max(data.diff[,4]):min(data.diff[,4])
data.score <- matrix(NA, length(diff.score), 3)
data.score <- as.data.frame(data.score)
data.score[,1] <- diff.score
names(data.score) <- c("diff.score", "num.win", "num.played")
View(data.score)
4/2 == 0
4/2
4%2 == 0
4%%2 == 0
1:nrow(diff.score)
nrow(diff.score)
diff.score <- max(data.diff[,4]):min(data.diff[,4])
data.score <- matrix(NA, length(diff.score), 3)
data.score <- as.data.frame(data.score)
data.score[,1] <- diff.score
names(data.score) <- c("diff.score", "num.win", "num.played")
nrow(diff.score)
1:nrow(data.score)
index.row <- which(data.diff[,4]==10)
which(data.diff[,4]==10)
View(data.score)
for(s in 1:nrow(data.score)) {
index.row <- which(data.diff[,4]==data.score[s,1])
data.score[s,3] <- length(index.row)
num.wined <- 0
if(length(index.row)!=0) {for(i in index.row) {
}}
}
View(data.score)
for(s in 1:nrow(data.score)) {
index.row <- which(data.diff[,4]==data.score[s,1])
data.score[s,3] <- length(index.row)
num.wined <- 0
if(length(index.row)!=0) {for(i in index.row) {
if(i%%2==0) {
} else {
}
}}
}
View(data.diff)
for(s in 1:nrow(data.score)) {
index.row <- which(data.diff[,4]==data.score[s,1])
data.score[s,3] <- length(index.row)
num.wined <- 0
if(length(index.row)!=0) {for(i in index.row) {
if(i%%2==0) {
if(data.diff[i-1,4]>0) num.wined <- num.wined+1
} else {
if(data.diff[i+1,4]>0) num.wined <- num.wined+1
}
}}
data.score[s,2] <- num.wined
}
View(data.score)
for(s in 1:nrow(data.score)) {
index.row <- which(data.diff[,4]==data.score[s,1])
data.score[s,3] <- length(index.row)
num.wined <- 0
if(length(index.row)!=0) {for(i in index.row) {
if(i%%2==0) {
if(data.diff[i-1,4]<0) num.wined <- num.wined+1
} else {
if(data.diff[i+1,4]<>0) num.wined <- num.wined+1
}
}}
data.score[s,2] <- num.wined
}
for(s in 1:nrow(data.score)) {
index.row <- which(data.diff[,4]==data.score[s,1])
data.score[s,3] <- length(index.row)
num.wined <- 0
if(length(index.row)!=0) {for(i in index.row) {
if(i%%2==0) {
if(data.diff[i-1,4]<0) num.wined <- num.wined+1
} else {
if(data.diff[i+1,4]<0) num.wined <- num.wined+1
}
}}
data.score[s,2] <- num.wined
}
View(data.score)
p <- data.score[,2] / data.score[,3]
p
plot(seq(nrow(data.score)),p)
plot(data.score[,1],p)
write.csv(data.score, file = "arranged-data/data-score.csv")
nrow(data.diff)
data.win <- matrix(NA, nrow(data.diff), 3)
data.win <- as.data.frame(data.win)
names(data.score) <- c("result.alien", "diff.score.at.home")
data.win <- matrix(NA, nrow(data.diff), 2)
data.win <- as.data.frame(data.win)
names(data.score) <- c("result.alien", "diff.score.at.home")
View(data.win)
View(data.diff)
data.win <- matrix(NA, nrow(data.diff), 2)
data.win <- as.data.frame(data.win)
names(data.win) <- c("result.alien", "diff.score.at.home")
View(data.win)
for(i in 1:nrow(data.diff)) {
data.win[i,2] <- data.diff[i,4]
if(i%%2==0) {
if(data.diff[i-1,4]<0) data.win[i,1] <- "WIN"
} else {
if(data.diff[i+1,4]<0) data.win[i,1] <- "LOSE"
}
}
View(data.win)
for(i in 1:nrow(data.diff)) {
data.win[i,2] <- data.diff[i,4]
if(i%%2==0) {
if(data.diff[i-1,4]<0) data.win[i,1] <- "WIN"
else data.win[i,1] <- "LOSE"
} else {
if(data.diff[i+1,4]<0) data.win[i,1] <- "WIN"
else data.win[i,1] <- "LOSE"
}
}
write.csv(data.win, file = "arranged-data/data-result.csv")
View(data.win)
model.log <- glm(result.alien~., data.win, family="binomial")
data.win[i,1] <- factor(data.win[i,1])
model.log <- glm(result.alien~., data.win, family="binomial")
View(data.win)
for(i in 1:nrow(data.diff)) {
data.win[i,2] <- data.diff[i,4]
if(i%%2==0) {
if(data.diff[i-1,4]<0) data.win[i,1] <- 1
else data.win[i,1] <- 0
} else {
if(data.diff[i+1,4]<0) data.win[i,1] <- 1
else data.win[i,1] <- 0
}
}
model.log <- glm(result.alien~., data.win, family="binomial")
data.win[i,1] <- as.numeric(data.win[i,1])
model.log <- glm(result.alien~., data.win, family="binomial")
data.win[i,1] <- as.binary(data.win[i,1])
View(data.win)
data.win[i,1] <- as.data.matrix(data.win[i,1])
data.win[i,1] <- data.matrix(data.win[i,1])
model.log <- glm(result.alien~., data.win, family="binomial")
View(data.win)
data.win <- data.matrix(data.win)
data.win <- as.data.frame(data.win)
model.log <- glm(result.alien~., data.win, family="binomial")
data.win[,1] <- factor(data.win[,1])
model.log <- glm(result.alien~., data.win, family="binomial")
model.log
for(i in 1:nrow(data.diff)) {
data.win[i,2] <- data.diff[i,4]
if(i%%2==0) {
if(data.diff[i-1,4]<0) data.win[i,1] <- "WIN"
else data.win[i,1] <- "LOSE"
} else {
if(data.diff[i+1,4]<0) data.win[i,1] <- "WIN"
else data.win[i,1] <- "LOSE"
}
}
data.win[,2] <- data.matrix(data.win[,2])
model.log <- glm(result.alien~., data.win, family="binomial")
View(data.win)
for(i in 1:nrow(data.diff)) {
data.win[i,2] <- data.diff[i,4]
if(i%%2==0) {
if(data.diff[i-1,4]<0) data.win[i,1] <- 1
else data.win[i,1] <- 0
} else {
if(data.diff[i+1,4]<0) data.win[i,1] <- 1
else data.win[i,1] <- 0
}
}
data.win[,2] <- data.matrix(data.win[,2])
model.log <- glm(result.alien~., data.win, family="binomial")
write.csv(data.win, file = "arranged-data/data-result.csv")
model.log <- glm(result.alien~., data.win, family="binomial")
predict(model.log)
predict(model.log,type="class")
predict(model.log, type="class")
predict(model.log)
predict(model.log,type="response")
pred <- sapply(predict(model.log,type="response"), function(y) {
if(y>0.5) return(1)
else return(0)
})
pred
pred == data.win[i,1]
sum(pred == data.win[i,1])
sum(pred == data.win[i,1]) / length(pred)
tab <- table(pred=pred, true=data.win[i,1])
sum(pred == data.win[i,1]) / length(pred)
tab <- table(pred=pred, true=data.win[i,1])
pred
data.win[i,1]
sum(pred == data.win[,1]) / length(pred)
sum(pred == data.win[,1]) / length(pred)
tab <- table(pred=pred, true=data.win[,1])
tab
